buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle-experimental:0.7.3'
	}
}

apply plugin: 'com.android.model.library'

task compileNdkExec(type: Exec) {
	commandLine 'ndk-build', '-C', file('exec').absolutePath
	def ndkOutDir = "exec/libs"
	def srcDir = "src"

	def copyDaemon = { inputType, outputType ->
		delete file("$srcDir/$outputType/assets/iomerge")
		file("$srcDir/$outputType/assets/iomerge_daemon") getParentFile() mkdirs()
		file("$ndkOutDir/$inputType/iomerge") renameTo file("$srcDir/$outputType/assets/iomerge_daemon")
	}

	copyDaemon('armeabi', 'main')
	copyDaemon('armeabi', 'arm')
	copyDaemon('arm64-v8a', 'arm8')
	copyDaemon('armeabi-v7a', 'arm7')
	copyDaemon('x86', 'x86')
	copyDaemon('x86_64', 'x86-64')
	copyDaemon('mips', 'mips')
	copyDaemon('mips64', 'mips-64')
}

gradle.projectsEvaluated {
	preBuild.dependsOn(compileNdkExec)
}

model {
	android {
		compileSdkVersion = 24
		buildToolsVersion = "24.0.2"

		defaultConfig.with {
			minSdkVersion.apiLevel = 15
			targetSdkVersion.apiLevel = 24
			versionCode = 1
			versionName = "1.0"
		}


	}

	android.lintOptions {
		disable 'NewApi' // TODO
	}

	android.buildTypes {
		release {
			minifyEnabled = false
			proguardFiles.add(file("proguard-rules.pro"))
		}
	}

	android.ndk {
		moduleName = "native"
	}

}